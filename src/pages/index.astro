---
import "../styles/tailwind.css";
import "animate.css";
const title = "Welcome | Portfolio";
---

<html lang="da">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- ✅ Alpine.js + GSAP CDN -->
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js" defer></script>

    <title>{title}</title>
  </head>

  <body class="bg-black text-white overflow-hidden h-screen">
    <main class="relative h-full w-full" x-data="doorScene()" x-init="updateBeam(); window.addEventListener('resize', updateBeam)">
      
      <!-- 🔹 Left-side navigation -->
      <div class="absolute left-[14vw] top-[35vh] text-[12px] md:text-sm text-gray-300 space-y-3 z-20">
        <a href="/portfolio" @click.prevent="openLink($event)" class="block hover:text-white transition">Om mig</a>
        <a href="/projects" @click.prevent="openLink($event)" class="block hover:text-white transition">Projekter</a>
        <a href="/lejeplads" @click.prevent="openLink($event)" class="block hover:text-white transition">Lejeplads</a>
      </div>

      <!-- 🔹 Camera scene -->
      <div id="camera" class="h-full w-full grid place-items-center [perspective:1600px] [transform-style:preserve-3d]">
        
        <!-- Door(Stage) -->
        <div id="stage" class="relative z-30 [transform-style:preserve-3d]">
          <!-- ✅ 문 뒤 흰빛 -->
          <div
            id="door-light"
            class="absolute inset-0 bg-white opacity-0 blur-[60px] scale-[1.4] transition-all duration-700"
            style="z-index:-5;"
          ></div>

          <!-- 문 -->
          <div
            id="door"
            @click.prevent.stop="open"
            class="relative w-[clamp(120px,14vw,180px)] aspect-[2/3] border border-white bg-black cursor-pointer origin-left will-change-transform [transform-style:preserve-3d]"
            style="box-shadow: inset 0 0 0 1px rgba(255,255,255,.15); backface-visibility: visible;"
          >
            <!-- Front of door -->
            <div class="absolute inset-0 bg-black"></div>

            <!-- Door inner (뒤집힌 면, 약간 밝은 회색) -->
            <div
              id="door-inner"
              class="absolute inset-0 bg-neutral-900"
              style="transform: rotateY(180deg) translateZ(0.1px); backface-visibility: visible;"
            ></div>

            <!-- handle -->
            <div
              id="handle"
              class="absolute right-[14%] top-1/2 w-[12px] h-[12px] md:w-[16px] md:h-[16px] rounded-full border border-white/90"
              style="transform: translateY(-50%) translateZ(2px);"
            ></div>
          </div>

          <!-- Door frame -->
          <div aria-hidden class="absolute inset-0 -z-10 w-[clamp(122px,14.2vw,182px)] aspect-[2/3] border border-white/30 translate-x-[2px] translate-y-[2px]"></div>
        </div>

        <!-- Light beam (ground reflection) -->
        <div
          id="beam"
          class="pointer-events-none absolute inset-0 z-20 opacity-0 transition-opacity duration-300"
          style="
            --lx: 50vw;
            --rx: 50vw;
            --y: 62vh;
            background: radial-gradient(1200px 700px at 50% var(--y),
              rgba(255,255,255,0.85) 0%,
              rgba(255,255,255,0.6) 25%,
              rgba(150,150,150,0.25) 50%,
              rgba(0,0,0,0) 100%);
            -webkit-clip-path: polygon(0% 100%, 100% 100%, var(--rx) var(--y), var(--lx) var(--y));
            clip-path: polygon(0% 100%, 100% 100%, var(--rx) var(--y), var(--lx) var(--y));
            mix-blend-mode: screen;
          "
        ></div>
      </div>

      <!-- Fade overlay -->
      <div id="overlay" class="absolute inset-0 bg-black opacity-0 pointer-events-none z-50"></div>
    </main>

    <!-- ✅ Alpine + GSAP Script -->
    <script>
      document.addEventListener("alpine:init", () => {
        Alpine.data("doorScene", () => ({
          targetUrl: "/portfolio",
          isAnimating: false,

          updateBeam() {
            const door = document.getElementById("door");
            const beam = document.getElementById("beam");
            if (!door || !beam) return;
            const r = door.getBoundingClientRect();
            beam.style.setProperty("--lx", r.left + "px");
            beam.style.setProperty("--rx", r.right + "px");
            beam.style.setProperty("--y", (r.bottom - 5) + "px");
          },

          open(event) {
            event.preventDefault();
            if (this.isAnimating) return;
            this.isAnimating = true;

            const door = document.getElementById("door");
            const inner = document.getElementById("door-inner");
            const beam = document.getElementById("beam");
            const light = document.getElementById("door-light");
            const camera = document.getElementById("camera");
            const stage = document.getElementById("stage");

            this.updateBeam();

            const tl = gsap.timeline({ defaults: { ease: "power3.out" } });

            // (1) 문 열기
            tl.to(door, {
              duration: 1.5,
              rotateY: -100,
              transformOrigin: "left center",
              ease: "power3.inOut",
              boxShadow: "inset 0 0 24px rgba(255,255,255,0.25)"
            }, 0);

            // (2) 문 뒤 흰빛 확산 (문틈에서 새어나옴)
            tl.to(light, {
              duration: 1.0,
              opacity: 1,
              scale: 1.8,
              filter: "blur(40px)",
              ease: "sine.out"
            }, 0.2);

            // (3) 그림자 빛 (바닥)
            tl.to(beam, {
              duration: 1.2,
              opacity: 1,
              ease: "power2.out"
            }, 0.3);

            // (4) 카메라 중앙 이동
            const rect = stage.getBoundingClientRect();
            const dx = window.innerWidth / 2 - (rect.left + rect.width / 2);
            const dy = window.innerHeight / 2 - (rect.top + rect.height / 2);

            tl.to("#camera", {
              duration: 1.0,
              x: dx,
              y: dy,
              ease: "power3.inOut"
            }, 0.6);

            // (5) 줌인 전환
            tl.to("#camera", {
              duration: 1.3,
              scale: 6,
              ease: "power3.in",
              onComplete: () => window.location.assign(this.targetUrl)
            }, 1.0);
          },

          // 링크 클릭 시
          openLink(event) {
            event.preventDefault();
            const href = event.currentTarget.getAttribute("href");
            this.targetUrl = href;
            this.open(event);
          },
        }));
      });
    </script>
  </body>
</html>
