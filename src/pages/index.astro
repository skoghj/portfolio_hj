---
import MainLayout from "../layouts/MainLayout.astro";
const FALLBACK_URL = "/aboutme"; // 기본 이동 경로
---

<MainLayout title="Landing Page">
  <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>

  <!-- (변경 #1) FALLBACK_URL을 data 속성으로 주입 -->
  <div 
    x-data="doorScene()"
    x-init="setup()"
    data-fallback-url={FALLBACK_URL}
    class="relative min-h-screen w-full overflow-hidden font-[Inter] flex items-center justify-center bg-black text-white"
  >
    <div x-ref="scene" class="scene relative w-full h-[90vh] flex items-center justify-center"
         style="perspective:1200px;" :class="entering ? 'scene-zoom' : ''">
      <div class="door-wrap relative w-[14vw] h-[22vw] min-w-[170px] min-h-[260px]">
        <div class="door-light absolute inset-0 bg-white opacity-0 pointer-events-none"
             :class="open ? 'light-on' : ''"></div>

        <button type="button" @click="enter()" @keydown.enter.prevent="enter()"
                class="door absolute inset-0 border border-white/80 bg-black cursor-pointer outline-none"
                :class="open ? 'door-open' : ''"
                style="transform-origin:left center; transform-style:preserve-3d;">
          <span class="absolute rounded-full border border-white/80 bg-transparent"
                style="width:1.1vw; height:1.1vw; min-width:18px; min-height:18px; top:50%; right:10%; transform:translateY(-50%);"></span>
        </button>
      </div>
    </div>

    <div class="white-bg absolute inset-0 bg-white opacity-0 pointer-events-none"
         :class="fadeOut ? 'white-on' : ''" aria-hidden="true"></div>
  </div>

  <script is:inline>
    function doorScene() {
      return {
        open: false, entering: false, fadeOut: false, locked: false,
        fallback: '/',

        setup() {
          // (변경 #2) data-fallback-url에서 안전하게 읽기
          const root = document.querySelector('[data-fallback-url]');
          this.fallback = (root && root.dataset.fallbackUrl) ? root.dataset.fallbackUrl : '/';

          // 헤더 인터셉트 방식 쓰는 경우를 대비해 전역 트리거 제공(선택)
          window.__doorEnter = this.enter.bind(this);
          if (!window.__doorTarget) window.__doorTarget = this.fallback;
        },

        enter() {
          if (this.locked) return;
          this.locked = true;

          this.open = true;                         // 문 열림
          setTimeout(() => { this.entering = true; }, 250);  // 줌인
          setTimeout(() => { this.fadeOut = true; }, 950);   // 화이트 페이드

          // (변경 #3) 전역 타겟이 있으면 그리로, 없으면 fallback으로
          setTimeout(() => {
            const target = window.__doorTarget || this.fallback;
            window.location.href = target;          // 예: "/aboutme", "/work", ...
          }, 1550);
        }
      }
    }
  </script>

  <style is:global>
    .door{ transition:transform 1000ms cubic-bezier(.22,.61,.36,1); will-change:transform; transform:rotateY(0); backface-visibility:hidden;}
    .door-open{ transform:rotateY(-110deg); }
    .door-light{ transition:opacity 620ms ease; }
    .light-on{ opacity:1; }
    .scene{ transition:transform 900ms cubic-bezier(.22,.61,.36,1); transform:scale(1); will-change:transform; }
    .scene-zoom{ transform:scale(1.55); }
    .white-bg{ transition:opacity 700ms ease-in; }
    .white-on{ opacity:1; }
    .door:focus-visible{ outline:2px dashed #a3e635; outline-offset:4px; }
  </style>
</MainLayout>
