---
import { gsap } from "gsap";
---

<!-- ✅ Scroll Stack -->
<div 
  x-data="scrollStack"
  x-init="init()"
  class="relative overflow-visible"
  style="margin-top: 12vh;"
> 
  <div class="relative min-h-[480vh]">

    <!-- ===== FEATURE 01 ===== -->
    <section class="scroll-card z-30">
      <div class="relative w-[85vw] sm:w-[420px] h-10 sm:h-12 bg-feature1-50 flex items-center pl-4 sm:pl-6 label-clip">
        <span class="font-semibold text-xs sm:text-sm tracking-widest text-secondary-50 font-title py-4">
          Feature 01
        </span>
      </div>

      <!-- ✅ CARD CONTENT -->
      <div class="flex-1 bg-feature1-50 border border-feature1-50 p-6 shadow-md sm:px-8 sm:py-12 overflow-visible rounded-lg">
        <div class="max-w-6xl mx-auto mb-8">
          <h2 class="text-2xl sm:text-3xl font-bold mb-2">Interactive Experiences</h2>
          <p class="text-sm sm:text-base">Creating immersive digital experience through interaction</p>
        </div>

        <!-- Header -->
        <div class="max-w-6xl mx-auto border-t border-b border-neutral-800 py-2 mb-8">
          <div class="uppercase text-xs tracking-widest flex justify-between">
            <span>Projects Title</span>
            <span>Preview</span>
          </div>
        </div>

        <!-- ✅ CAROUSEL -->
        <div 
          class="max-w-6xl mx-auto grid md:grid-cols-12 gap-6 items-start"
          x-data="carouselItem"
          x-init="init()"
        >
          <!-- Col 1: projects name -->
          <div class="col-span-12 md:col-span-3">
            <h3 class="font-title text-xl sm:text-2xl font-semibold mb-2" x-text="current.title"></h3>
            <p class="text-sm text-neutral-800" x-text="current.year"></p>
              <div class="flex flex-col justify-start">
            <a 
              :href="current.link" 
              target="_blank"
              class="ml-auto text-[11px] sm:text-xs tracking-widest text-neutral-900 underline underline-offset-4 hover:text-black transition" >
              View site →</a>
            <a 
              :href="current.link" 
              target="_blank"
              class="ml-auto text-[11px] sm:text-xs tracking-widest text-neutral-900 underline underline-offset-4 hover:text-black transition" >
              View proces →</a>
          </div>
          </div>

          <!-- Col 2: design -->
          <div class="col-span-12 md:col-span-3 md:pt-10">
            <template x-for="r in current.roles" :key="r">
              <p class="text-xs sm:text-sm tracking-wider uppercase" x-text="r"></p>
            </template>
          </div>

          <!-- Col 3 + 4: images -->
          <div class="col-span-12 md:col-span-6 relative overflow-hidden rounded-lg">
            <div class="flex transition-transform duration-700 ease-in-out w-full h-full"
                :style="`transform: translateX(-${index * 100}%);`">
              <template x-for="(item, i) in items" :key="i">
                <div class="min-w-full relative w-full aspect-[3/2] overflow-hidden">
                  <img 
                  :src="item.img"
                  :alt="item.title"
                  class="absolute inset-0 w-full h-full object-cover"/>
                </div>
              </template>
            </div>

            <!-- Arrows -->
            <button
              @click="prev()"
              class="absolute left-2 top-1/2 -translate-y-1/2 bg-white/70 text-black w-8 h-8 rounded-full flex items-center justify-center hover:bg-white"
            >‹</button>
            <button
              @click="next()"
              class="absolute right-2 top-1/2 -translate-y-1/2 bg-white/70 text-black w-8 h-8 rounded-full flex items-center justify-center hover:bg-white"
            >›</button>

            <!-- Dots -->
            <div class="absolute bottom-3 left-1/2 -translate-x-1/2 flex gap-1">
              <template x-for="(dot, i) in items" :key="i">
                <div class="w-2 h-2 rounded-full transition-all duration-300"
                    :class="index === i ? 'bg-white' : 'bg-white/40'"></div>
              </template>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- ===== FEATURE 02 ===== -->
    <section class="scroll-card z-40">
      <div class="relative w-[85vw] sm:w-[420px] h-10 sm:h-12 bg-feature2-50 flex items-center pl-4 sm:pl-6 label-clip ml-[15vw] sm:ml-[180px]">
        <span class="font-semibold text-xs sm:text-sm tracking-widest text-secondary-50 font-title">
          Feature 02
        </span>
      </div>
      <!-- ✅ CARD CONTENT -->
      <div class="flex-1 bg-feature2-50 border border-feature2-50 p-6 shadow-md sm:px-8 sm:py-12 overflow-visible rounded-lg">
        <div class="max-w-6xl mx-auto mb-8">
          <h2 class="text-2xl sm:text-3xl font-bold mb-2">Storytelling & Contents</h2>
          <p class="text-sm sm:text-base">Turning emotion into meaningful digital experiences</p>
        </div>

        <!-- Header -->
        <div class="max-w-6xl mx-auto border-t border-b border-neutral-800 py-2 mb-8">
          <div class="uppercase text-xs tracking-widest flex justify-between">
            <span>Projects Title</span>
            <span>Preview</span>
          </div>
        </div>

        <!-- ✅ CAROUSEL -->
        <div 
          class="max-w-6xl mx-auto grid md:grid-cols-12 gap-6 items-start"
          x-data="carouselItem"
          x-init="init()"
        >
          <!-- Col 1: projects name -->
          <div class="col-span-12 md:col-span-3">
            <h3 class="font-title text-xl sm:text-2xl font-semibold mb-2" x-text="current.title"></h3>
            <p class="text-sm text-neutral-800" x-text="current.year"></p>
          </div>

          <!-- Col 2: design -->
          <div class="col-span-12 md:col-span-3 md:pt-10">
            <template x-for="r in current.roles" :key="r">
              <p class="text-xs sm:text-sm tracking-wider uppercase" x-text="r"></p>
            </template>
          </div>

          <!-- Col 3 + 4: images -->
          <div class="col-span-12 md:col-span-6 relative overflow-hidden rounded-lg">
            <div class="flex transition-transform duration-700 ease-in-out w-full h-full"
                :style="`transform: translateX(-${index * 100}%);`">
              <template x-for="(item, i) in items" :key="i">
                <div class="min-w-full relative w-full aspect-[3/2] overflow-hidden">
                  <img 
                  :src="item.img"
                  :alt="item.title"
                  class="absolute inset-0 w-full h-full object-cover"/>
                </div>
              </template>
            </div>

            <!-- Arrows -->
            <button
              @click="prev()"
              class="absolute left-2 top-1/2 -translate-y-1/2 bg-white/70 text-black w-8 h-8 rounded-full flex items-center justify-center hover:bg-white"
            >‹</button>
            <button
              @click="next()"
              class="absolute right-2 top-1/2 -translate-y-1/2 bg-white/70 text-black w-8 h-8 rounded-full flex items-center justify-center hover:bg-white"
            >›</button>

            <!-- Dots -->
            <div class="absolute bottom-3 left-1/2 -translate-x-1/2 flex gap-1">
              <template x-for="(dot, i) in items" :key="i">
                <div class="w-2 h-2 rounded-full transition-all duration-300"
                    :class="index === i ? 'bg-white' : 'bg-white/40'"></div>
              </template>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- ===== FEATURE 03 ===== -->
    <section class="scroll-card z-50">
      <div class="relative w-[85vw] sm:w-[420px] h-10 sm:h-12 bg-feature3-50 flex items-center pl-4 sm:pl-6 label-clip ml-[30vw] sm:ml-[360px]">
        <span class="font-semibold text-xs sm:text-sm tracking-widest text-secondary-50 font-title py-4">
          Feature 03
        </span>
      </div>
       <!-- ✅ CARD CONTENT -->
      <div class="flex-1 bg-feature3-50 border border-feature3-50 p-6 shadow-md sm:px-8 sm:py-12 overflow-visible rounded-lg">
        <div class="max-w-6xl mx-auto mb-8">
          <h2 class="text-2xl sm:text-3xl font-bold mb-2">Concept & Design</h2>
          <p class="text-sm sm:text-base">Merging strategy, usability, and creativity into digital solution</p>
        </div>

        <!-- Header -->
        <div class="max-w-6xl mx-auto border-t border-b border-neutral-800 py-2 mb-8">
          <div class="uppercase text-xs tracking-widest flex justify-between">
            <span>Projects Title</span>
            <span>Preview</span>
          </div>
        </div>

        <!-- ✅ CAROUSEL -->
        <div 
          class="max-w-6xl mx-auto grid md:grid-cols-12 gap-6 items-start"
          x-data="carouselItem"
          x-init="init()"
        >
          <!-- Col 1: projects name -->
          <div class="col-span-12 md:col-span-3">
            <h3 class="font-title text-xl sm:text-2xl font-semibold mb-2" x-text="current.title"></h3>
            <p class="text-sm text-neutral-800" x-text="current.year"></p>
          </div>

          <!-- Col 2: design -->
          <div class="col-span-12 md:col-span-3 md:pt-10">
            <template x-for="r in current.roles" :key="r">
              <p class="text-xs sm:text-sm tracking-wider uppercase" x-text="r"></p>
            </template>
          </div>

          <!-- Col 3 + 4: images -->
          <div class="col-span-12 md:col-span-6 relative overflow-hidden rounded-lg">
            <div class="flex transition-transform duration-700 ease-in-out w-full h-full"
                :style="`transform: translateX(-${index * 100}%);`">
              <template x-for="(item, i) in items" :key="i">
                <div class="min-w-full relative w-full aspect-[3/2] overflow-hidden">
                  <img 
                  :src="item.img"
                  :alt="item.title"
                  class="absolute inset-0 w-full h-full object-cover"/>
                </div>
              </template>
            </div>

            <!-- Arrows -->
            <button
              @click="prev()"
              class="absolute left-2 top-1/2 -translate-y-1/2 bg-white/70 text-black w-8 h-8 rounded-full flex items-center justify-center hover:bg-white"
            >‹</button>
            <button
              @click="next()"
              class="absolute right-2 top-1/2 -translate-y-1/2 bg-white/70 text-black w-8 h-8 rounded-full flex items-center justify-center hover:bg-white"
            >›</button>

            <!-- Dots -->
            <div class="absolute bottom-3 left-1/2 -translate-x-1/2 flex gap-1">
              <template x-for="(dot, i) in items" :key="i">
                <div class="w-2 h-2 rounded-full transition-all duration-300"
                    :class="index === i ? 'bg-white' : 'bg-white/40'"></div>
              </template>
            </div>
          </div>
        </div>
      </div>
    </section>

  </div>
</div>

<!-- ✅ 스타일 -->
<style>
.label-clip {
  clip-path: polygon(0 0, calc(100% - 32px) 0, 100% 100%, 0 100%);
  margin-bottom: 0;
}
.scroll-card {
  position: sticky;
  top: 12vh;
  height: 80vh;
  transform-origin: top center;
  will-change: transform;
  transition: transform 0.2s ease-out;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  padding-top: 0.75rem;
}
.scrollbar-thin::-webkit-scrollbar {
  width: 6px;
}
.scrollbar-thin::-webkit-scrollbar-thumb {
  background: rgba(120, 120, 120, 0.6);
  border-radius: 4px;
}
.scrollbar-thin::-webkit-scrollbar-track {
  background: transparent;
}
</style>

<!-- ✅ SCRIPT -->
<script>
document.addEventListener("alpine:init", () => {
  /* ===== Scroll Stack ===== */
  Alpine.data("scrollStack", () => ({
    cards: [],
    lastY: 0,
    easedY: 0,
    heroH: 0,
    anchorTop: 0,
    stackOffset: 140,
    ease: 0.12,
    segmentList: [],
    init() {
      this.cards = [...document.querySelectorAll(".scroll-card")];
      this.heroH = window.innerHeight;
      this.anchorTop = Math.round(window.innerHeight * 0.12);
      this.stackOffset = window.innerWidth < 640 ? 90 : 140;
      this.segmentList = this.cards.map(() => window.innerHeight * 1.2);
      window.addEventListener("scroll", () => (this.lastY = window.scrollY));
      window.addEventListener("resize", () => this.segmentList = this.cards.map(() => window.innerHeight * 1.2));
      this.raf();
    },
    clamp01(v) { return Math.max(0, Math.min(1, v)); },
    raf() {
      this.easedY += (this.lastY - this.easedY) * this.ease;
      const s = Math.max(0, this.easedY - (this.heroH - this.anchorTop));
      this.cards.forEach((card, i) => {
        if (i === 0) {
          card.style.transform = "translate3d(0, 0, 0)";
          return;
        }
        const start = this.segmentList.slice(0, i - 1).reduce((a, b) => a + b, 0);
        const end = start + this.segmentList[i - 1];
        const t = this.clamp01((s - start) / (end - start));
        const initial = i * this.stackOffset;
        const translate = initial * (1 - t);
        card.style.transform = `translate3d(0, ${translate}px, 0)`;
      });
      requestAnimationFrame(() => this.raf());
    },
  }));

  /* ===== Carousel Section ===== */
  Alpine.data("carouselItem", () => ({
    index: 0,
    items: [
      {
        title: "Snuggys Eventyr",
        year: "2024",
        link: "https://snuggyseventyr.netlify.app/spil",
        roles: ["Brand identity design", "Logo design", "Illustration"],
        img: "/asset/snuggy.svg",
      },
      {
        title: "Snuggys Eventyr — Gameplay",
        year: "2024",
        roles: ["User experience", "User interface"],
        imgLeft: "https://placehold.co/600x400/ff8c00/ffffff?text=Left+2",
        imgRight: "https://placehold.co/600x400/f4a261/ffffff?text=Right+2",
      },
      {
        title: "Snuggys Eventyr — World",
        year: "2024",
        roles: ["Art direction", "3D elements"],
        imgLeft: "https://placehold.co/600x400/ffd6a5/000000?text=Left+3",
        imgRight: "https://placehold.co/600x400/ffeab5/000000?text=Right+3",
      },
    ],
    current: {},
    init() { this.current = this.items[this.index]; },
    next() {
      const p = this.index;
      this.index = (this.index + 1) % this.items.length;
      this.transition(p, this.index);
    },
    prev() {
      const p = this.index;
      this.index = (this.index - 1 + this.items.length) % this.items.length;
      this.transition(p, this.index);
    },
    transition(from, to) {
      this.current = this.items[to];
      gsap.fromTo("[x-text='current.title']", { opacity: 0, y: 10 }, { opacity: 1, y: 0, duration: 0.5 });
      gsap.fromTo("[x-text='current.year']", { opacity: 0, y: 10 }, { opacity: 1, y: 0, duration: 0.5, delay: 0.1 });
      gsap.fromTo(".col-span-12.md\\:col-span-3 p", { opacity: 0, y: 8 }, { opacity: 1, y: 0, duration: 0.5, stagger: 0.05, delay: 0.15 });
    },
  }));
});
</script>
